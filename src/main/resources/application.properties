spring.profiles.active=dev

server.port= 8686
#server.port= 443
#server.ssl.key-store= classpath:keystore0812.p12
#server.ssl.key-store-password= 666666
#server.ssl.key-store-type= PKCS12
#server.ssl.key-alias= dsz-test


management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*
spring.jmx.enabled=true
management.endpoint.health.show-details=always


spring.redis.host=192.168.10.5
#Redis服务器连接端口
spring.redis.port=6379
#Redis服务器连接密码（默认为空）
spring.redis.password=
spring.redis.database=15
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
#连接池中的最大空闲连接
spring.redis.pool.max-idle=8
#连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接超时时间（毫秒）
spring.redis.timeout=30000


######mybatis######
mybatis.type-handlers-package=com.example.dsz.mybatis.type_handler
mybatis.mapper-locations=classpath*:mapper/*.xml
mybatis.configuration.object-factory=com.example.dsz.mybatis.object_factory.MyObjectFactory
#决定了是否延迟加载
mybatis.configuration.lazy-loading-enabled=true
#决定了是不是对象的所有方法都会触发懒加载
mybatis.configuration.aggressive-lazy-loading=false
#细粒度控制那些方法不触发懒加载,出现在下面配置中的方法会触发懒加载
mybatis.configuration.lazy-load-trigger-methods=equals,clone,hashCode
#mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#mybatis.configuration.proxy-factory=org.apache.ibatis.executor.loader.javassist.JavassistProxyFactory

#开启一级缓存
#mybatis.configuration.local-cache-scope=session
#关闭以及缓存
#mybatis.configuration.local-cache-scope=statement

#开启二级缓存
#mybatis.configuration.cache-enabled=true

mybatis.configuration.log-prefix=666666





######mysql######
spring.datasource.url=jdbc:mysql://192.168.50.203:3306/dsz-data-base?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=CONVERT_TO_NULL&serverTimezone=CTT
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
######druid######
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# druid 下面为连接池的补充设置，应用到上面所有数据源中
# druid 初始化连接数大小，最小，最大
spring.datasource.druid.initial-size=8
spring.datasource.druid.min-idle=8
spring.datasource.druid.max-active=30
# druid 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=30000
# druid 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
# druid 验证数据库连接的有效性
spring.datasource.druid.validation-query=select '1' from dual
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# druid 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-open-prepared-statements=20
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# druid 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.filters=stat,wall,slf4j




dsz.age=30
dsz.name=shouzhi@duan


logging.level.root=info
logging.level.com.example.dsz=debug





















